
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDNUMBERleftREGCOMMAleftRPCLPCADD ADDV ALGV CIRLV CIRRV COMMA DP ID LDR LDRV LPC MINUS NOP NUM NUMBER REG REPEAT RPC STR STRV SUB SUBV VEC XOR XORVprogram : blockblock : inst blockblock : emptyinst : ID DPinst : NOPinst : ADD REG COMMA REG COMMA REGinst : ADD REG COMMA REG COMMA NUM NUMBERinst : SUB REG COMMA REG COMMA REGinst : SUB REG COMMA REG COMMA NUM NUMBERinst : XOR REG COMMA REG COMMA REGinst : XOR REG COMMA REG COMMA NUM NUMBERinst : LDR REG COMMA LPC REG RPC COMMA NUM NUMBERinst : LDR REG COMMA LPC REG COMMA NUM NUMBER RPCinst : LDR REG COMMA LPC REG RPCinst : STR REG COMMA LPC REG RPC COMMA NUM NUMBERinst : STR REG COMMA LPC REG COMMA NUM NUMBER RPCinst : STR REG COMMA LPC REG RPCinst : ADDV VEC COMMA VEC COMMA VECinst : ADDV VEC COMMA VEC COMMA NUM NUMBERinst : SUBV VEC COMMA VEC COMMA VECinst : SUBV VEC COMMA VEC COMMA NUM NUMBERinst : CIRRV VEC COMMA VEC COMMA REGinst : CIRRV VEC COMMA VEC COMMA NUM NUMBERinst : CIRLV VEC COMMA VEC COMMA REGinst : CIRLV VEC COMMA VEC COMMA NUM NUMBERinst : XORV VEC COMMA VEC COMMA REGinst : XORV VEC COMMA VEC COMMA NUM NUMBERinst : ALGV NUM NUMBERinst : REPEAT NUM NUMBERinst : LDRV VEC COMMA LPC REG COMMA NUM NUMBER RPCinst : LDRV VEC COMMA LPC REG RPCinst : STRV VEC COMMA LPC REG COMMA NUM NUMBER RPCinst : STRV VEC COMMA LPC REG RPCempty :'
    
_lr_action_items = {'ID':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[5,5,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'NOP':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[6,6,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'ADD':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[7,7,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'SUB':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[8,8,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'XOR':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[9,9,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'LDR':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[10,10,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'STR':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[11,11,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'ADDV':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[12,12,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'SUBV':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[13,13,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'CIRRV':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[14,14,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'CIRLV':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[15,15,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'XORV':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[16,16,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'ALGV':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[17,17,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'REPEAT':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[18,18,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'LDRV':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[19,19,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'STRV':([0,3,6,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[20,20,-5,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'$end':([0,1,2,3,4,6,21,22,47,48,75,77,79,82,84,85,87,89,91,93,96,98,99,100,101,106,107,108,109,110,119,120,121,122,123,124,],[-34,0,-1,-34,-3,-5,-2,-4,-28,-29,-6,-8,-10,-14,-17,-18,-20,-22,-24,-26,-31,-33,-7,-9,-11,-19,-21,-23,-25,-27,-13,-12,-16,-15,-30,-32,]),'DP':([5,],[22,]),'REG':([7,8,9,10,11,37,38,39,54,55,61,62,63,64,65,70,71,72,],[23,24,25,26,27,51,52,53,66,67,73,74,75,77,79,89,91,93,]),'VEC':([12,13,14,15,16,19,20,42,43,44,45,46,68,69,],[28,29,30,31,32,35,36,56,57,58,59,60,85,87,]),'NUM':([17,18,63,64,65,68,69,70,71,72,81,83,95,97,103,105,],[33,34,76,78,80,86,88,90,92,94,102,104,111,112,114,116,]),'COMMA':([23,24,25,26,27,28,29,30,31,32,35,36,51,52,53,56,57,58,59,60,66,67,73,74,82,84,],[37,38,39,40,41,42,43,44,45,46,49,50,63,64,65,68,69,70,71,72,81,83,95,97,103,105,]),'NUMBER':([33,34,76,78,80,86,88,90,92,94,102,104,111,112,114,116,],[47,48,99,100,101,106,107,108,109,110,113,115,117,118,120,122,]),'LPC':([40,41,49,50,],[54,55,61,62,]),'RPC':([66,67,73,74,113,115,117,118,],[82,84,96,98,119,121,123,124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,3,],[2,21,]),'inst':([0,3,],[3,3,]),'empty':([0,3,],[4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','analizadorSintactico.py',21),
  ('block -> inst block','block',2,'p_block','analizadorSintactico.py',28),
  ('block -> empty','block',1,'p_blockEmpty','analizadorSintactico.py',33),
  ('inst -> ID DP','inst',2,'p_instTag','analizadorSintactico.py',38),
  ('inst -> NOP','inst',1,'p_instNop','analizadorSintactico.py',43),
  ('inst -> ADD REG COMMA REG COMMA REG','inst',6,'p_instAdd','analizadorSintactico.py',51),
  ('inst -> ADD REG COMMA REG COMMA NUM NUMBER','inst',7,'p_instAddImm','analizadorSintactico.py',56),
  ('inst -> SUB REG COMMA REG COMMA REG','inst',6,'p_instSub','analizadorSintactico.py',62),
  ('inst -> SUB REG COMMA REG COMMA NUM NUMBER','inst',7,'p_instSubImm','analizadorSintactico.py',67),
  ('inst -> XOR REG COMMA REG COMMA REG','inst',6,'p_instXOR','analizadorSintactico.py',73),
  ('inst -> XOR REG COMMA REG COMMA NUM NUMBER','inst',7,'p_instXORImm','analizadorSintactico.py',78),
  ('inst -> LDR REG COMMA LPC REG RPC COMMA NUM NUMBER','inst',9,'p_instLdrImm','analizadorSintactico.py',94),
  ('inst -> LDR REG COMMA LPC REG COMMA NUM NUMBER RPC','inst',9,'p_instLdrRI','analizadorSintactico.py',100),
  ('inst -> LDR REG COMMA LPC REG RPC','inst',6,'p_instLdr','analizadorSintactico.py',105),
  ('inst -> STR REG COMMA LPC REG RPC COMMA NUM NUMBER','inst',9,'p_instStrImm','analizadorSintactico.py',118),
  ('inst -> STR REG COMMA LPC REG COMMA NUM NUMBER RPC','inst',9,'p_instStrRI','analizadorSintactico.py',124),
  ('inst -> STR REG COMMA LPC REG RPC','inst',6,'p_instStr','analizadorSintactico.py',129),
  ('inst -> ADDV VEC COMMA VEC COMMA VEC','inst',6,'p_instAddVec','analizadorSintactico.py',137),
  ('inst -> ADDV VEC COMMA VEC COMMA NUM NUMBER','inst',7,'p_instAddVecImm','analizadorSintactico.py',142),
  ('inst -> SUBV VEC COMMA VEC COMMA VEC','inst',6,'p_instSubVec','analizadorSintactico.py',147),
  ('inst -> SUBV VEC COMMA VEC COMMA NUM NUMBER','inst',7,'p_instSubVecImm','analizadorSintactico.py',152),
  ('inst -> CIRRV VEC COMMA VEC COMMA REG','inst',6,'p_instCirRVReg','analizadorSintactico.py',157),
  ('inst -> CIRRV VEC COMMA VEC COMMA NUM NUMBER','inst',7,'p_instCirRVImm','analizadorSintactico.py',162),
  ('inst -> CIRLV VEC COMMA VEC COMMA REG','inst',6,'p_instCirLVReg','analizadorSintactico.py',167),
  ('inst -> CIRLV VEC COMMA VEC COMMA NUM NUMBER','inst',7,'p_instCirLVImm','analizadorSintactico.py',172),
  ('inst -> XORV VEC COMMA VEC COMMA REG','inst',6,'p_instXorVReg','analizadorSintactico.py',177),
  ('inst -> XORV VEC COMMA VEC COMMA NUM NUMBER','inst',7,'p_instXorVImm','analizadorSintactico.py',182),
  ('inst -> ALGV NUM NUMBER','inst',3,'p_instALGV','analizadorSintactico.py',187),
  ('inst -> REPEAT NUM NUMBER','inst',3,'p_instRepeat','analizadorSintactico.py',192),
  ('inst -> LDRV VEC COMMA LPC REG COMMA NUM NUMBER RPC','inst',9,'p_instLdrVRI','analizadorSintactico.py',197),
  ('inst -> LDRV VEC COMMA LPC REG RPC','inst',6,'p_instLdrVRIOwn','analizadorSintactico.py',202),
  ('inst -> STRV VEC COMMA LPC REG COMMA NUM NUMBER RPC','inst',9,'p_instStrVRI','analizadorSintactico.py',207),
  ('inst -> STRV VEC COMMA LPC REG RPC','inst',6,'p_instStrVRIOwn','analizadorSintactico.py',212),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',220),
]
